###############################################################################
# Generate-RegionalPages.ps1
# Generates HTML pages for each region from the template
###############################################################################

Write-Host "=" * 80 -ForegroundColor Cyan
Write-Host "Generating Regional Statistics Pages" -ForegroundColor Cyan
Write-Host "=" * 80 -ForegroundColor Cyan

# Configuration
$rootDir = "C:\Users\demck\OneDrive\Football_2024\static-football-rankings"
$scriptDir = Join-Path $rootDir "scripts"
$templatePath = Join-Path $scriptDir "regional-statistics-template.html"
$outputDir = Join-Path $rootDir "docs\pages\public\regional-statistics"

# Ensure output directory exists
if (-not (Test-Path $outputDir)) {
    Write-Host "Creating output directory..." -ForegroundColor Yellow
    New-Item -ItemType Directory -Path $outputDir -Force | Out-Null
}

# Define regions
$regions = @(
    @{Key = "northeast"; Name = "Northeast"},
    @{Key = "southeast"; Name = "Southeast"},
    @{Key = "midwest"; Name = "Midwest"},
    @{Key = "southwest"; Name = "Southwest"},
    @{Key = "west"; Name = "West"},
    @{Key = "canada"; Name = "Canada"}
)

# Check if template exists
if (-not (Test-Path $templatePath)) {
    Write-Error "Template file not found: $templatePath"
    Write-Host "Expected location: $templatePath" -ForegroundColor Yellow
    Write-Host "Please ensure the regional-statistics-template.html file exists in the scripts folder." -ForegroundColor Yellow
    exit 1
}

# Load template
Write-Host "`n📄 Loading template..." -ForegroundColor Yellow
$template = Get-Content $templatePath -Raw
Write-Host "✅ Template loaded" -ForegroundColor Green

# Generate page for each region
Write-Host "`n🔨 Generating regional pages..." -ForegroundColor Yellow
foreach ($region in $regions) {
    Write-Host "  Processing $($region.Name)..." -ForegroundColor Cyan
    
    # Replace placeholders
    $pageContent = $template -replace 'REGION_NAME', $region.Name
    $pageContent = $pageContent -replace 'REGION_KEY', $region.Key
    
    # Save to file
    $outputPath = Join-Path $outputDir "$($region.Key).html"
    Set-Content -Path $outputPath -Value $pageContent -Encoding UTF8
    
    Write-Host "    ✓ Created: $($region.Key).html" -ForegroundColor Green
}

# Copy index and comparison pages
Write-Host "`n📋 Copying additional pages..." -ForegroundColor Yellow

$indexSource = Join-Path $scriptDir "regional-statistics-index.html"
$indexDest = Join-Path $outputDir "index.html"

$comparisonSource = Join-Path $scriptDir "regional-comparison.html"
$comparisonDest = Join-Path $outputDir "comparison.html"

if (Test-Path $indexSource) {
    Copy-Item -Path $indexSource -Destination $indexDest -Force
    Write-Host "  ✓ Copied index.html" -ForegroundColor Green
} else {
    Write-Warning "Index page not found: $indexSource"
}

if (Test-Path $comparisonSource) {
    Copy-Item -Path $comparisonSource -Destination $comparisonDest -Force
    Write-Host "  ✓ Copied comparison.html" -ForegroundColor Green
} else {
    Write-Warning "Comparison page not found: $comparisonSource"
}

# Verify files were created
Write-Host "`n✅ Verifying created files..." -ForegroundColor Yellow
$expectedFiles = @("index.html", "comparison.html")
foreach ($region in $regions) {
    $expectedFiles += "$($region.Key).html"
}

$allFilesExist = $true
foreach ($file in $expectedFiles) {
    $filePath = Join-Path $outputDir $file
    if (Test-Path $filePath) {
        Write-Host "  ✓ $file" -ForegroundColor Green
    } else {
        Write-Host "  ✗ $file - MISSING" -ForegroundColor Red
        $allFilesExist = $false
    }
}

if ($allFilesExist) {
    Write-Host "`n🎉 All regional pages generated successfully!" -ForegroundColor Green
    Write-Host "`nGenerated files in: $outputDir" -ForegroundColor Cyan
    Write-Host "  • index.html (main regional statistics page)" -ForegroundColor Gray
    Write-Host "  • comparison.html (regional comparison chart)" -ForegroundColor Gray
    foreach ($region in $regions) {
        Write-Host "  • $($region.Key).html ($($region.Name) region details)" -ForegroundColor Gray
    }
    
    Write-Host "`nNext steps:" -ForegroundColor Cyan
    Write-Host "  1. Ensure regional data has been generated by running:" -ForegroundColor Gray
    Write-Host "     .\Generate-RegionalStatistics.ps1" -ForegroundColor DarkGray
    Write-Host "  2. Test the pages locally" -ForegroundColor Gray
    Write-Host "  3. Commit and push to GitHub:" -ForegroundColor Gray
    Write-Host "     cd $rootDir" -ForegroundColor DarkGray
    Write-Host "     git add docs/pages/public/regional-statistics/*.html" -ForegroundColor DarkGray
    Write-Host "     git add docs/data/regional-statistics/*" -ForegroundColor DarkGray
    Write-Host "     git commit -m 'Add regional statistics pages'" -ForegroundColor DarkGray
    Write-Host "     git push origin main" -ForegroundColor DarkGray
} else {
    Write-Error "Some files were not created. Please check for errors above."
}

Write-Host "`n" + ("=" * 80) -ForegroundColor Cyan
Write-Host "Process complete!" -ForegroundColor Cyan
Write-Host ("=" * 80) -ForegroundColor Cyan